From 4bf708acc8fb3d5ec5c9711b02fd9e443be0ba96 Mon Sep 17 00:00:00 2001
From: Szymon Sliwa <szs@semihalf.com>
Date: Tue, 27 Feb 2018 17:41:22 +0100
Subject: [PATCH 1/2] Add compile time flag to disable the odp_ipsec API

The new odp_ipsec API is not present in the old versions of
odp-dpdk, to make it possible to compile odp4vpp on them
there is this compile time flag
---
 src/plugins/odp/ipsec/crypto_input.c          | 8 ++++++++
 src/plugins/odp/ipsec/esp_decrypt_ipsec_api.c | 3 +++
 src/plugins/odp/ipsec/esp_encrypt_ipsec_api.c | 3 +++
 src/plugins/odp/ipsec/ipsec.c                 | 9 +++++++++
 src/plugins/odp/ipsec/ipsec.h                 | 4 ++++
 src/plugins/odp/odp_packet.c                  | 5 +++++
 6 files changed, 32 insertions(+)

diff --git a/src/plugins/odp/ipsec/crypto_input.c b/src/plugins/odp/ipsec/crypto_input.c
index 05e3257..6560bb7 100644
--- a/src/plugins/odp/ipsec/crypto_input.c
+++ b/src/plugins/odp/ipsec/crypto_input.c
@@ -139,6 +139,7 @@ odp_dequeue_cops (vlib_main_t * vm, vlib_node_runtime_t * node,
   return n_deq;
 }
 
+#ifdef ODP_IPSEC_PRESENT
 static uword
 odp_dequeue_ipsec_ops (vlib_main_t * vm, vlib_node_runtime_t * node,
 		       vlib_frame_t * frame, odp_queue_t queue,
@@ -221,6 +222,7 @@ odp_dequeue_ipsec_ops (vlib_main_t * vm, vlib_node_runtime_t * node,
 
   return n_deq;
 }
+#endif
 
 static uword
 odp_crypto_input_node_fn (vlib_main_t * vm, vlib_node_runtime_t * node,
@@ -231,7 +233,9 @@ odp_crypto_input_node_fn (vlib_main_t * vm, vlib_node_runtime_t * node,
   odp_crypto_worker_main_t *cwm =
     vec_elt_at_index (ocm->workers, thread_index);
   u32 n_cops_dequeued = 0;
+#ifdef ODP_IPSEC_PRESENT
   if (!enable_odp_ipsec)
+#endif
     {
       n_cops_dequeued +=
 	odp_dequeue_cops (vm, node, frame, cwm->post_encrypt,
@@ -240,6 +244,7 @@ odp_crypto_input_node_fn (vlib_main_t * vm, vlib_node_runtime_t * node,
 	odp_dequeue_cops (vm, node, frame, cwm->post_decrypt,
 			  ODP_CRYPTO_INPUT_NEXT_DECRYPT_POST);
     }
+#ifdef ODP_IPSEC_PRESENT
   else
     {
       n_cops_dequeued +=
@@ -249,6 +254,7 @@ odp_crypto_input_node_fn (vlib_main_t * vm, vlib_node_runtime_t * node,
 	odp_dequeue_ipsec_ops (vm, node, frame, cwm->post_decrypt,
 			       ODP_IPSEC_INPUT_NEXT_DECRYPT_POST);
     }
+#endif
   return n_cops_dequeued;
 }
 
@@ -271,9 +277,11 @@ VLIB_REGISTER_NODE (odp_crypto_input_node) =
 #define _(s, n) [ODP_CRYPTO_INPUT_NEXT_##s] = n,
 	foreach_odp_crypto_input_next
 #undef _
+#ifdef ODP_IPSEC_PRESENT
 #define _(s, n) [ODP_IPSEC_INPUT_NEXT_##s] = n,
 	foreach_odp_ipsec_input_next
 #undef _
+#endif
   },
 };
 /* *INDENT-ON* */
diff --git a/src/plugins/odp/ipsec/esp_decrypt_ipsec_api.c b/src/plugins/odp/ipsec/esp_decrypt_ipsec_api.c
index 8069bf5..8d235ed 100644
--- a/src/plugins/odp/ipsec/esp_decrypt_ipsec_api.c
+++ b/src/plugins/odp/ipsec/esp_decrypt_ipsec_api.c
@@ -25,6 +25,8 @@
 
 #include <assert.h>
 
+#ifdef ODP_IPSEC_PRESENT
+
 #define foreach_esp_decrypt_next                \
 _(DROP, "error-drop")                           \
 _(IP4_INPUT, "ip4-input")                       \
@@ -354,6 +356,7 @@ VLIB_REGISTER_NODE (odp_ipsec_esp_decrypt_post_node) = {
 #undef _
   },
 };
+#endif
 
 /* *INDENT-ON* */
 
diff --git a/src/plugins/odp/ipsec/esp_encrypt_ipsec_api.c b/src/plugins/odp/ipsec/esp_encrypt_ipsec_api.c
index 3051f62..355595e 100644
--- a/src/plugins/odp/ipsec/esp_encrypt_ipsec_api.c
+++ b/src/plugins/odp/ipsec/esp_encrypt_ipsec_api.c
@@ -25,6 +25,8 @@
 
 #include <assert.h>
 
+#ifdef ODP_IPSEC_PRESENT
+
 #define foreach_esp_encrypt_next                   \
 _(DROP, "error-drop")                              \
 _(IP4_LOOKUP, "ip4-lookup")                        \
@@ -446,6 +448,7 @@ VLIB_REGISTER_NODE (odp_ipsec_esp_encrypt_post_node) = {
 #undef _
   },
 };
+#endif
 
 /* *INDENT-ON* */
 
diff --git a/src/plugins/odp/ipsec/ipsec.c b/src/plugins/odp/ipsec/ipsec.c
index a26dc35..e861975 100644
--- a/src/plugins/odp/ipsec/ipsec.c
+++ b/src/plugins/odp/ipsec/ipsec.c
@@ -84,6 +84,8 @@ vpp_to_odp_auth_alg (int vpp_auth_alg)
     }
 }
 
+#ifdef ODP_IPSEC_PRESENT
+
 int				// should flow_label be here?
 create_odp_sa (ipsec_sa_t * sa, sa_data_t * sa_sess_data, int flow_label,
 	       int is_outbound)
@@ -169,6 +171,7 @@ create_odp_sa (ipsec_sa_t * sa, sa_data_t * sa_sess_data, int flow_label,
 
   return 0;
 }
+#endif
 
 int
 create_sess (ipsec_sa_t * sa, sa_data_t * sa_sess_data, int is_outbound)
@@ -334,9 +337,11 @@ ipsec_init (vlib_main_t * vm)
 
   ipsec_node = vlib_get_node_by_name (vm, (u8 *) "ipsec-output-ip4");
   ASSERT (ipsec_node);
+#ifdef ODP_IPSEC_PRESENT
   if (enable_odp_ipsec)
     crypto_node = vlib_get_node_by_name (vm, (u8 *) "odp-ipsec-esp-encrypt");
   else
+#endif
     crypto_node = vlib_get_node_by_name (vm, (u8 *) "odp-crypto-esp-encrypt");
   ASSERT (crypto_node);
   im->esp_encrypt_node_index = crypto_node->index;
@@ -345,9 +350,11 @@ ipsec_init (vlib_main_t * vm)
 
   ipsec_node = vlib_get_node_by_name (vm, (u8 *) "ipsec-input-ip4");
   ASSERT (ipsec_node);
+#ifdef ODP_IPSEC_PRESENT
   if (enable_odp_ipsec)
     crypto_node = vlib_get_node_by_name (vm, (u8 *) "odp-ipsec-esp-decrypt");
   else
+#endif
     crypto_node = vlib_get_node_by_name (vm, (u8 *) "odp-crypto-esp-decrypt");
   ASSERT (crypto_node);
   im->esp_decrypt_node_index = crypto_node->index;
@@ -368,6 +375,7 @@ ipsec_init (vlib_main_t * vm)
 
   esp_init ();
 
+#ifdef ODP_IPSEC_PRESENT
   if (enable_odp_ipsec)
     {
       odp_ipsec_config_t ipsec_config;
@@ -402,6 +410,7 @@ ipsec_init (vlib_main_t * vm)
 	}
       odp_ipsec_config (&ipsec_config);
     }
+#endif
 
   int i;
   for (i = 1; i < tm->n_vlib_mains; i++)
diff --git a/src/plugins/odp/ipsec/ipsec.h b/src/plugins/odp/ipsec/ipsec.h
index 06fdfed..dcff2cc 100644
--- a/src/plugins/odp/ipsec/ipsec.h
+++ b/src/plugins/odp/ipsec/ipsec.h
@@ -18,10 +18,14 @@
 #include <odp_api.h>
 #include <vnet/ipsec/ipsec.h>
 
+//#define ODP_IPSEC_PRESENT
+
 typedef struct
 {
   u8 is_odp_sa_present;
+#ifdef ODP_IPSEC_PRESENT
   odp_ipsec_sa_t odp_sa;
+#endif
   odp_crypto_session_t sess;
   u32 digest_size;
   u8 iv_data[16];
diff --git a/src/plugins/odp/odp_packet.c b/src/plugins/odp/odp_packet.c
index 76ef979..ac3fcad 100755
--- a/src/plugins/odp/odp_packet.c
+++ b/src/plugins/odp/odp_packet.c
@@ -512,6 +512,7 @@ odp_packet_init (vlib_main_t * vm)
   odp_pool_capability_t capa;
   odp_shm_t shm;
   odp_instance_t instance;
+#ifdef ODP_IPSEC_PRESENT
   odp_init_t init_params;
 
   odp_init_param_init (&init_params);
@@ -519,6 +520,10 @@ odp_packet_init (vlib_main_t * vm)
   init_params.not_used.feat.schedule = 0;
   if (odp_init_global (&instance, &init_params, NULL))
     clib_warning ("Error: ODP global init failed");
+#else
+  if (odp_init_global (&instance, NULL, NULL))
+    clib_warning ("Error: ODP global init failed");
+#endif
 
   if (odp_init_local (instance, ODP_THREAD_CONTROL) != 0)
     {
-- 
2.7.4

